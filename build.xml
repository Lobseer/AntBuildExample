<project name="AntDefault" basedir="." default="all">

    <!--/////////////////////////////////////////////PROPERTIES//////////////////////////////////////////////////-->

    <property name="lib.dir" location="lib"/>
    <property name="lib.main.dir" location="${lib.dir}/main"/>
    <property name="lib.test.dir" location="${lib.dir}/test"/>

    <property name="src.dir" location="src"/>
    <property name="src.main.dir" location="${src.dir}/main"/>
    <property name="src.test.dir" location="${src.dir}/test"/>

    <property name="bin.dir" location="bin"/>
    <property name="bin.main.dir" location="${bin.dir}/main"/>
    <property name="bin.test.dir" location="${bin.dir}/test"/>
    <property name="jar.file" location="${bin.dir}/build.jar"/>

    <property name="report.dir" location="report"/>
    <property name="report.junit.dir" location="${report.dir}/junit"/>
    <property name="report.cobertura.dir" location="${report.dir}/cobertura"/>
    <property name="report.temp.dir" location="${report.dir}/temp"/>
    <property name="report.checkstyle.dir" location="${report.dir}/checkstyle"/>

    <property name="resource.dir" location="resources"/>

    <property name="cobertura.home.dir" value="${lib.test.dir}/cobertura"/>
    <property name="findbugs.home.dir" value="${lib.test.dir}/findbugs-3.0.1"/>
    <property name="pmd.home.dir" value="${lib.test.dir}/pmd-bin-5.5.4"/>
    <property name="ser.file" location="${report.temp.dir}/cobertura.ser"/>

    <!--/////////////////////////////////////////////COMPILE//////////////////////////////////////////////////-->

    <path id="path.compile">
        <fileset dir="${lib.main.dir}" includes="**/*.jar"/>
    </path>

    <target name="compile">
        <mkdir dir="${bin.main.dir}"/>
        <javac debug="yes"
               srcdir="${src.main.dir}"
               destdir="${bin.main.dir}"
               source="1.8"
               target="1.8"
               includeantruntime="false"
               classpathref="path.compile">
        </javac>
    </target>

    <path id="path.compile.test">
        <path refid="path.compile"/>
        <fileset dir="${lib.test.dir}" includes="**/*.jar"/>
        <pathelement location="${bin.main.dir}"/>
    </path>

    <target name="compile.test" depends="compile">
        <mkdir dir="${bin.test.dir}"/>
        <javac debug="yes"
               srcdir="${src.test.dir}"
               destdir="${bin.test.dir}"
               source="1.8"
               target="1.8"
               includeantruntime="false"
               classpathref="path.compile.test">
        </javac>
    </target>

    <target name="jar" depends="compile.test">
        <jar destfile="${jar.file}">
            <fileset dir="${bin.main.dir}">
                <include name="**/*.class"/>
                <exclude name="**/CVS"/>
            </fileset>
        </jar>
    </target>

    <target name="clean" depends="clean.temp">
        <delete dir="${bin.dir}"/>
        <delete dir="${report.dir}"/>
    </target>

    <target name="clean.temp">
        <delete dir="${report.temp.dir}"/>
    </target>

    <!--//////////////////////////////////////////TESTING/////////////////////////////////////////////////////-->


    <path id="path.cobertura">
        <path refid="path.compile"/>
        <fileset dir="${cobertura.home.dir}">
            <include name="cobertura-2.1.1.jar"/>
            <include name="lib/**/*.jar"/>
        </fileset>
    </path>
    <taskdef classpathref="path.cobertura" resource="tasks.properties"/>

    <target name="cobertura.instrument" depends="compile.test, clean.temp">
        <mkdir dir="${report.temp.dir}"/>
        <cobertura-instrument todir="${report.temp.dir}" datafile="${ser.file}">
            <ignore regex="org.slf4j.*"/>
            <fileset dir="${bin.dir}">
                <include name="**/*.class"/>
                <exclude name="**/*Test.class"/>
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="test" depends="cobertura.instrument">
        <junit printsummary="yes" fork="yes" haltonfailure="no">
            <sysproperty key="net.sourceforge.cobertura.datafile" file="${ser.file}"/>

            <classpath>
                <path refid="path.cobertura"/>
                <pathelement location="${report.temp.dir}"/>
                <pathelement location="${bin.main.dir}"/>
                <pathelement location="${bin.test.dir}"/>
                <pathelement location="${src.main.dir}"/>
                <pathelement location="${src.test.dir}"/>
            </classpath>

            <formatter type="plain"/>
            <formatter type="xml"/>

            <batchtest todir="${report.temp.dir}">
                <fileset dir="${bin.test.dir}" includes="**/*.class"/>
            </batchtest>
        </junit>
    </target>

    <!--//////////////////////////////////////////TEST REPORTS/////////////////////////////////////////////////////-->

    <target name="report.junit" depends="test">
        <delete dir="${report.junit.dir}"/>
        <mkdir dir="${report.junit.dir}"/>
        <junitreport todir="${report.junit.dir}">
            <fileset dir="${report.temp.dir}">
                <include name="*.xml"/>
            </fileset>
            <report format="frames" todir="${report.junit.dir}"/>
        </junitreport>
    </target>

    <!-- -->
    <target name="report.cobertura" depends="test">
        <mkdir dir="${report.cobertura.dir}"/>
        <cobertura-report format="html"
                          datafile="${ser.file}"
                          destdir="${report.cobertura.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
            </fileset>
        </cobertura-report>
    </target>

    <!--//////////////////////////////////////////STYLE REPORTS/////////////////////////////////////////////////////-->

    <path id="checkstyle.lib.path">
        <fileset dir="${lib.test.dir}" includes="*.jar"/>
        <fileset dir="${findbugs.home.dir}" includes="**/*.jar"/>
        <fileset dir="${pmd.home.dir}" includes="**/*.jar"/>
    </path>
    <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
             classpathref="checkstyle.lib.path"/>
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="checkstyle.lib.path"/>
    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="checkstyle.lib.path"/>

    <target name="checkstyle" depends="compile">
        <mkdir dir="${report.checkstyle.dir}"/>
        <antcall target="check.checkstyle"/>
        <antcall target="pmd"/>
        <antcall target="findbugs"/>
    </target>

    <target name="check.checkstyle">
        <mkdir dir="${report.temp.dir}"/>
        <checkstyle config="${resource.dir}/checkstyle.xml"
                    failOnViolation="false">
            <formatter type="xml" tofile="${report.temp.dir}/checkstyle_report.xml"/>
            <fileset dir="${src.main.dir}" includes="**/*.java"/>
        </checkstyle>
        <xslt in="${report.temp.dir}/checkstyle_report.xml" out="${report.checkstyle.dir}/checkstyle_report.html"
              style="${resource.dir}/checkstyle.xsl"/>
    </target>

    <target name="pmd">
        <pmd shortFilenames="true">
            <sourcelanguage name="java" version="1.8"/>
            <!--<ruleset>resources/design.xml</ruleset>-->
            <ruleset>java-basic</ruleset>
            <ruleset>java-imports</ruleset>
            <ruleset>java-unusedcode</ruleset>
            <ruleset>java-codesize</ruleset>
            <ruleset>java-empty</ruleset>
            <ruleset>java-naming</ruleset>

            <!--<formatter type="xml" toFile="reports/pmd_report.xml"/>-->
            <formatter type="html" toFile="${report.checkstyle.dir}/pmd_report.html"/>
            <fileset dir="${src.main.dir}" includes="**/*.java"/>
        </pmd>
    </target>

    <target name="findbugs">
        <!-- run findbugs against asm-util -->
        <findbugs home="${findbugs.home.dir}"
                  output="html"
                  reportLevel="experimental"
                  workHard="true"
                  effort="max"
                  adjustExperimental="true"
                  failOnError="true"
                  outputFile="${report.checkstyle.dir}/findbugs_report.html"
                  projectName="Findbugs"
                  debug="false">
            <!--<class location="${jarname.jar}" />-->
            <class location="${bin.main.dir}"/>
        </findbugs>
    </target>

    <!-- -->
    <target name="all" depends="clean">
        <antcall target="jar"/>
        <antcall target="report.cobertura"/>
        <antcall target="report.junit"/>
        <antcall target="checkstyle"/>
    </target>

</project>